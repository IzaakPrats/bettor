// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: bettor/v1alpha/bettor.proto

package bettorv1alpha

import (
	datetime "google.golang.org/genproto/googleapis/type/datetime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BettingEvent_Status int32

const (
	BettingEvent_STATUS_UNSPECIFIED BettingEvent_Status = 0
	BettingEvent_STATUS_ACTIVE      BettingEvent_Status = 1
	BettingEvent_STATUS_BETS_LOCKED BettingEvent_Status = 2
	BettingEvent_STATUS_SETTLED     BettingEvent_Status = 3
)

// Enum value maps for BettingEvent_Status.
var (
	BettingEvent_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_ACTIVE",
		2: "STATUS_BETS_LOCKED",
		3: "STATUS_SETTLED",
	}
	BettingEvent_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_ACTIVE":      1,
		"STATUS_BETS_LOCKED": 2,
		"STATUS_SETTLED":     3,
	}
)

func (x BettingEvent_Status) Enum() *BettingEvent_Status {
	p := new(BettingEvent_Status)
	*p = x
	return p
}

func (x BettingEvent_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BettingEvent_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bettor_v1alpha_bettor_proto_enumTypes[0].Descriptor()
}

func (BettingEvent_Status) Type() protoreflect.EnumType {
	return &file_bettor_v1alpha_bettor_proto_enumTypes[0]
}

func (x BettingEvent_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BettingEvent_Status.Descriptor instead.
func (BettingEvent_Status) EnumDescriptor() ([]byte, []int) {
	return file_bettor_v1alpha_bettor_proto_rawDescGZIP(), []int{1, 0}
}

// User identifies a user and their properties.
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Points float64 `protobuf:"fixed64,2,opt,name=points,proto3" json:"points,omitempty"` // NOTE: is double precision okay? use an integer centipoint and disallow long fractional parts?
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bettor_v1alpha_bettor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_bettor_v1alpha_bettor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_bettor_v1alpha_bettor_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetPoints() float64 {
	if x != nil {
		return x.Points
	}
	return 0
}

type BettingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *datetime.DateTime  `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *datetime.DateTime  `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LockAt    *datetime.DateTime  `protobuf:"bytes,4,opt,name=lock_at,json=lockAt,proto3" json:"lock_at,omitempty"`
	SettledAt *datetime.DateTime  `protobuf:"bytes,5,opt,name=settled_at,json=settledAt,proto3" json:"settled_at,omitempty"`
	Title     string              `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Creator   string              `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
	Status    BettingEvent_Status `protobuf:"varint,8,opt,name=status,proto3,enum=bettor.v1alpha.BettingEvent_Status" json:"status,omitempty"`
	// Types that are assignable to Type:
	//
	//	*BettingEvent_DiscreteOutcome
	Type isBettingEvent_Type `protobuf_oneof:"type"`
}

func (x *BettingEvent) Reset() {
	*x = BettingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bettor_v1alpha_bettor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BettingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BettingEvent) ProtoMessage() {}

func (x *BettingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_bettor_v1alpha_bettor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BettingEvent.ProtoReflect.Descriptor instead.
func (*BettingEvent) Descriptor() ([]byte, []int) {
	return file_bettor_v1alpha_bettor_proto_rawDescGZIP(), []int{1}
}

func (x *BettingEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BettingEvent) GetCreatedAt() *datetime.DateTime {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BettingEvent) GetUpdatedAt() *datetime.DateTime {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *BettingEvent) GetLockAt() *datetime.DateTime {
	if x != nil {
		return x.LockAt
	}
	return nil
}

func (x *BettingEvent) GetSettledAt() *datetime.DateTime {
	if x != nil {
		return x.SettledAt
	}
	return nil
}

func (x *BettingEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BettingEvent) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *BettingEvent) GetStatus() BettingEvent_Status {
	if x != nil {
		return x.Status
	}
	return BettingEvent_STATUS_UNSPECIFIED
}

func (m *BettingEvent) GetType() isBettingEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *BettingEvent) GetDiscreteOutcome() *DiscreteOutcomeEvent {
	if x, ok := x.GetType().(*BettingEvent_DiscreteOutcome); ok {
		return x.DiscreteOutcome
	}
	return nil
}

type isBettingEvent_Type interface {
	isBettingEvent_Type()
}

type BettingEvent_DiscreteOutcome struct {
	DiscreteOutcome *DiscreteOutcomeEvent `protobuf:"bytes,9,opt,name=discrete_outcome,json=discreteOutcome,proto3,oneof"`
}

func (*BettingEvent_DiscreteOutcome) isBettingEvent_Type() {}

type DiscreteOutcomeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outcomes []*DiscreteOutcome `protobuf:"bytes,1,rep,name=outcomes,proto3" json:"outcomes,omitempty"`
	Winner   string             `protobuf:"bytes,2,opt,name=winner,proto3" json:"winner,omitempty"`
}

func (x *DiscreteOutcomeEvent) Reset() {
	*x = DiscreteOutcomeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bettor_v1alpha_bettor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscreteOutcomeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscreteOutcomeEvent) ProtoMessage() {}

func (x *DiscreteOutcomeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_bettor_v1alpha_bettor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscreteOutcomeEvent.ProtoReflect.Descriptor instead.
func (*DiscreteOutcomeEvent) Descriptor() ([]byte, []int) {
	return file_bettor_v1alpha_bettor_proto_rawDescGZIP(), []int{2}
}

func (x *DiscreteOutcomeEvent) GetOutcomes() []*DiscreteOutcome {
	if x != nil {
		return x.Outcomes
	}
	return nil
}

func (x *DiscreteOutcomeEvent) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

type DiscreteOutcome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title  string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Points float64 `protobuf:"fixed64,3,opt,name=points,proto3" json:"points,omitempty"`
	Users  int32   `protobuf:"varint,4,opt,name=users,proto3" json:"users,omitempty"`
}

func (x *DiscreteOutcome) Reset() {
	*x = DiscreteOutcome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bettor_v1alpha_bettor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscreteOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscreteOutcome) ProtoMessage() {}

func (x *DiscreteOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_bettor_v1alpha_bettor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscreteOutcome.ProtoReflect.Descriptor instead.
func (*DiscreteOutcome) Descriptor() ([]byte, []int) {
	return file_bettor_v1alpha_bettor_proto_rawDescGZIP(), []int{3}
}

func (x *DiscreteOutcome) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DiscreteOutcome) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DiscreteOutcome) GetPoints() float64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *DiscreteOutcome) GetUsers() int32 {
	if x != nil {
		return x.Users
	}
	return 0
}

type Bet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt      *datetime.DateTime `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *datetime.DateTime `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	SettledAt      *datetime.DateTime `protobuf:"bytes,4,opt,name=settled_at,json=settledAt,proto3" json:"settled_at,omitempty"`
	UserId         string             `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BettingEventId string             `protobuf:"bytes,6,opt,name=betting_event_id,json=bettingEventId,proto3" json:"betting_event_id,omitempty"`
	Points         float64            `protobuf:"fixed64,7,opt,name=points,proto3" json:"points,omitempty"`
	SettledPoints  float64            `protobuf:"fixed64,8,opt,name=settled_points,json=settledPoints,proto3" json:"settled_points,omitempty"`
	// Types that are assignable to Type:
	//
	//	*Bet_DiscreteOutcomeId
	Type isBet_Type `protobuf_oneof:"type"`
}

func (x *Bet) Reset() {
	*x = Bet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bettor_v1alpha_bettor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bet) ProtoMessage() {}

func (x *Bet) ProtoReflect() protoreflect.Message {
	mi := &file_bettor_v1alpha_bettor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bet.ProtoReflect.Descriptor instead.
func (*Bet) Descriptor() ([]byte, []int) {
	return file_bettor_v1alpha_bettor_proto_rawDescGZIP(), []int{4}
}

func (x *Bet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Bet) GetCreatedAt() *datetime.DateTime {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Bet) GetUpdatedAt() *datetime.DateTime {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Bet) GetSettledAt() *datetime.DateTime {
	if x != nil {
		return x.SettledAt
	}
	return nil
}

func (x *Bet) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Bet) GetBettingEventId() string {
	if x != nil {
		return x.BettingEventId
	}
	return ""
}

func (x *Bet) GetPoints() float64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *Bet) GetSettledPoints() float64 {
	if x != nil {
		return x.SettledPoints
	}
	return 0
}

func (m *Bet) GetType() isBet_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Bet) GetDiscreteOutcomeId() string {
	if x, ok := x.GetType().(*Bet_DiscreteOutcomeId); ok {
		return x.DiscreteOutcomeId
	}
	return ""
}

type isBet_Type interface {
	isBet_Type()
}

type Bet_DiscreteOutcomeId struct {
	DiscreteOutcomeId string `protobuf:"bytes,9,opt,name=discrete_outcome_id,json=discreteOutcomeId,proto3,oneof"`
}

func (*Bet_DiscreteOutcomeId) isBet_Type() {}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bettor_v1alpha_bettor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bettor_v1alpha_bettor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_bettor_v1alpha_bettor_proto_rawDescGZIP(), []int{5}
}

func (x *CreateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bettor_v1alpha_bettor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bettor_v1alpha_bettor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_bettor_v1alpha_bettor_proto_rawDescGZIP(), []int{6}
}

func (x *CreateUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bettor_v1alpha_bettor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bettor_v1alpha_bettor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_bettor_v1alpha_bettor_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bettor_v1alpha_bettor_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bettor_v1alpha_bettor_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_bettor_v1alpha_bettor_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

var File_bettor_v1alpha_bettor_proto protoreflect.FileDescriptor

var file_bettor_v1alpha_bettor_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x62, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x62, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x62,
	0x65, 0x74, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x1a, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x99, 0x04, 0x0a, 0x0c, 0x42, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x34, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x06,
	0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x09, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x62,
	0x65, 0x74, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x42, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x10, 0x64, 0x69, 0x73,
	0x63, 0x72, 0x65, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x69, 0x73,
	0x63, 0x72, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x45, 0x54, 0x53,
	0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x42, 0x06, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x6b, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74,
	0x65, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a,
	0x08, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x62, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x52, 0x08, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x22, 0x65, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x4f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0xf3, 0x02, 0x0a, 0x03, 0x42, 0x65,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x34, 0x0a,
	0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x62, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74,
	0x65, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x64, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x4f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x3d, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x3e,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x29,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x74,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x32, 0xb4, 0x01, 0x0a, 0x0d, 0x42, 0x65, 0x74, 0x74, 0x6f,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x62, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x65, 0x74, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x62, 0x65, 0x74,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x65, 0x74,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xb2, 0x01,
	0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x42, 0x0b, 0x42, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x65, 0x6c, 0x68, 0x2f, 0x62, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62,
	0x65, 0x74, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x62, 0x65,
	0x74, 0x74, 0x6f, 0x72, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xa2, 0x02, 0x03, 0x42, 0x58,
	0x58, 0xaa, 0x02, 0x0e, 0x42, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0xca, 0x02, 0x0e, 0x42, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x5c, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0xe2, 0x02, 0x1a, 0x42, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x5c, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0f, 0x42, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bettor_v1alpha_bettor_proto_rawDescOnce sync.Once
	file_bettor_v1alpha_bettor_proto_rawDescData = file_bettor_v1alpha_bettor_proto_rawDesc
)

func file_bettor_v1alpha_bettor_proto_rawDescGZIP() []byte {
	file_bettor_v1alpha_bettor_proto_rawDescOnce.Do(func() {
		file_bettor_v1alpha_bettor_proto_rawDescData = protoimpl.X.CompressGZIP(file_bettor_v1alpha_bettor_proto_rawDescData)
	})
	return file_bettor_v1alpha_bettor_proto_rawDescData
}

var file_bettor_v1alpha_bettor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bettor_v1alpha_bettor_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_bettor_v1alpha_bettor_proto_goTypes = []interface{}{
	(BettingEvent_Status)(0),     // 0: bettor.v1alpha.BettingEvent.Status
	(*User)(nil),                 // 1: bettor.v1alpha.User
	(*BettingEvent)(nil),         // 2: bettor.v1alpha.BettingEvent
	(*DiscreteOutcomeEvent)(nil), // 3: bettor.v1alpha.DiscreteOutcomeEvent
	(*DiscreteOutcome)(nil),      // 4: bettor.v1alpha.DiscreteOutcome
	(*Bet)(nil),                  // 5: bettor.v1alpha.Bet
	(*CreateUserRequest)(nil),    // 6: bettor.v1alpha.CreateUserRequest
	(*CreateUserResponse)(nil),   // 7: bettor.v1alpha.CreateUserResponse
	(*GetUserRequest)(nil),       // 8: bettor.v1alpha.GetUserRequest
	(*GetUserResponse)(nil),      // 9: bettor.v1alpha.GetUserResponse
	(*datetime.DateTime)(nil),    // 10: google.type.DateTime
}
var file_bettor_v1alpha_bettor_proto_depIdxs = []int32{
	10, // 0: bettor.v1alpha.BettingEvent.created_at:type_name -> google.type.DateTime
	10, // 1: bettor.v1alpha.BettingEvent.updated_at:type_name -> google.type.DateTime
	10, // 2: bettor.v1alpha.BettingEvent.lock_at:type_name -> google.type.DateTime
	10, // 3: bettor.v1alpha.BettingEvent.settled_at:type_name -> google.type.DateTime
	0,  // 4: bettor.v1alpha.BettingEvent.status:type_name -> bettor.v1alpha.BettingEvent.Status
	3,  // 5: bettor.v1alpha.BettingEvent.discrete_outcome:type_name -> bettor.v1alpha.DiscreteOutcomeEvent
	4,  // 6: bettor.v1alpha.DiscreteOutcomeEvent.outcomes:type_name -> bettor.v1alpha.DiscreteOutcome
	10, // 7: bettor.v1alpha.Bet.created_at:type_name -> google.type.DateTime
	10, // 8: bettor.v1alpha.Bet.updated_at:type_name -> google.type.DateTime
	10, // 9: bettor.v1alpha.Bet.settled_at:type_name -> google.type.DateTime
	1,  // 10: bettor.v1alpha.CreateUserRequest.user:type_name -> bettor.v1alpha.User
	1,  // 11: bettor.v1alpha.CreateUserResponse.user:type_name -> bettor.v1alpha.User
	1,  // 12: bettor.v1alpha.GetUserResponse.user:type_name -> bettor.v1alpha.User
	6,  // 13: bettor.v1alpha.BettorService.CreateUser:input_type -> bettor.v1alpha.CreateUserRequest
	8,  // 14: bettor.v1alpha.BettorService.GetUser:input_type -> bettor.v1alpha.GetUserRequest
	7,  // 15: bettor.v1alpha.BettorService.CreateUser:output_type -> bettor.v1alpha.CreateUserResponse
	9,  // 16: bettor.v1alpha.BettorService.GetUser:output_type -> bettor.v1alpha.GetUserResponse
	15, // [15:17] is the sub-list for method output_type
	13, // [13:15] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_bettor_v1alpha_bettor_proto_init() }
func file_bettor_v1alpha_bettor_proto_init() {
	if File_bettor_v1alpha_bettor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bettor_v1alpha_bettor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bettor_v1alpha_bettor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BettingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bettor_v1alpha_bettor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscreteOutcomeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bettor_v1alpha_bettor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscreteOutcome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bettor_v1alpha_bettor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bettor_v1alpha_bettor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bettor_v1alpha_bettor_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bettor_v1alpha_bettor_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bettor_v1alpha_bettor_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bettor_v1alpha_bettor_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*BettingEvent_DiscreteOutcome)(nil),
	}
	file_bettor_v1alpha_bettor_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Bet_DiscreteOutcomeId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bettor_v1alpha_bettor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bettor_v1alpha_bettor_proto_goTypes,
		DependencyIndexes: file_bettor_v1alpha_bettor_proto_depIdxs,
		EnumInfos:         file_bettor_v1alpha_bettor_proto_enumTypes,
		MessageInfos:      file_bettor_v1alpha_bettor_proto_msgTypes,
	}.Build()
	File_bettor_v1alpha_bettor_proto = out.File
	file_bettor_v1alpha_bettor_proto_rawDesc = nil
	file_bettor_v1alpha_bettor_proto_goTypes = nil
	file_bettor_v1alpha_bettor_proto_depIdxs = nil
}
